/// Test tuples whose fields can be generated by `rand::random`
use std::collections::HashSet;

use enum_derived::Rand;

#[derive(Rand)]
pub enum RandomTypes {
    Integers(u8, u16, u32, u64, usize, i8, i16, i32, i64, isize),
    Character(char),
    Empty,
    Boolean(bool),
    FloatingPoint(f32, f64),
    Arrays([u8; 32]),
    LongTuple(u8, u16, u32, u64, usize, i8, i16, i32, i64, isize, f32, f64),
    Options(Option<char>),
}

fn main() {
    let mut seen_variants = HashSet::new();
    for _ in 0..200 {
        let rt = RandomTypes::rand();
        seen_variants.insert(std::mem::discriminant(&rt));
    }
}
